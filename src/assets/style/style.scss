@use "sass:color";

html {
  color: #333;
}

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
  font-family: sans-serif;
}

input {
  font-size: 16px;
}

.wrapper {
  min-width: 360px;
  max-width: 752px;
  padding: 48px 16px 0;
  margin: 0 auto;
  counter-reset: section;
}

section {
  margin-bottom: 64px;
}

h2 {
  &::before {
    content: counter(section) ". ";
    counter-increment: section;
  }

  margin-bottom: 16px;
}

.exampleWrapper {
  display: flex;
  flex-wrap: wrap;
  column-gap: 24px;
  align-items: flex-start;
  justify-content: center;
  &__3column{
    .example{
      width: 220px;
    }
  }
}

.example {
  width: 348px;

  &__long {
    width: 100%;
  }

  h3 {
    margin-bottom: 8px;
    text-align: center;
  }

  &.ng {
    h3 {
      color: orangered;
    }
  }

  &.good {
    h3 {
      color: forestgreen;
    }
  }

  .sample {
    display: flex;
    align-items: center;
    justify-content: center;
    min-height: 200px;
    padding: 16px;
    background-color: #f9f9f9;
  }

  .note {
    padding: 16px;
  }
}

@mixin buttonStyle {
  display: block;
  width: 148px;
  height: 42px;
  padding: 8px 48px;
  font-size: 16px;
  font-weight: bold;
  color: #fff;
  cursor: pointer;
  background-color: #7859b7;
  border: none;
  border-radius: 50px;
  box-shadow: none;
  appearance: none;
}

.divButton {
  @include buttonStyle;
}

.buttonButton {
  @include buttonStyle;
}

@mixin homeButtonStyle {
  position: relative;
  display: block;
  width: 32px;
  height: 38px;
  cursor: pointer;
  background-color: transparent;
  border: none;
  appearance: none;

  &:hover {
    .icon_hover {
      opacity: 1;
    }
  }

  .icon_default,
  .icon_hover {
    position: absolute;
    top: 0;
    left: 2px;
    transition: opacity 0.2s;
  }

  .icon_hover {
    opacity: 0;
  }

  .homeButton_text {
    position: absolute;
    bottom: -2px;
    left: 0;
    width: 32px;
    font-size: 10px;
    text-align: center;
  }
}

.homeButtonNg {
  @include homeButtonStyle;
}

.homeButtonGood {
  @include homeButtonStyle;

  &::before {
    position: absolute;
    top: -9px;
    left: -9px;
    display: block;
    width: 50px;
    height: 50px;
    content: "";
  }
}

@mixin externalLinkStyle {
  position: relative;
  color: #000;

  &::after {
    position: absolute;
    top: 6px;
    display: block;
    width: 12px;
    height: 12px;
    content: "";
    background-image: url("/assets/images/icon_tab.svg");
    background-repeat: no-repeat;
    background-size: 12px;
  }
}

.externalLinkNG {
  @include externalLinkStyle;

  &::after {
    right: -20px;
  }
}

.externalLinkGood {
  @include externalLinkStyle;

  padding-right: 20px;

  &::after {
    right: 0;
  }
}

@mixin menuStyle {
  list-style: none;
  background-color: #7859b7;

  li {
    width: 240px;
    border-bottom: 1px solid #f9f9f9;

    a {
      color: #fff;
      text-decoration: none;
    }
  }
}

.menuNg {
  @include menuStyle;

  li {
    padding: 16px;
  }
}

.menuGood {
  @include menuStyle;

  a {
    display: block;
    padding: 16px;
  }
}

.basicCheck {
  display: inline-block;
  margin-right: 8px;
}

.policy {
  &_link {
    display: inline-block;
  }

  &.good {
    .policy_link {
      margin-bottom: 16px;
    }
  }
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  clip-path: polygon(0 0, 0 0, 0 0, 0 0);
  border: 0;
}

.iconButton {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 56px;
  height: 56px;
  cursor: pointer;
  background-color: #e9e9e9;
  border: none;
  border-radius: 8px;
  box-shadow: none;
  appearance: none;
  background-image: url("/assets/images/icon_search.svg");
  background-size: 48px;
  background-repeat: no-repeat;
  background-position: center center;
}

.buttonCursorNg {
  display: block;
  padding: 8px 48px;
  font-size: 16px;
  font-weight: bold;
  color: #fff;
  background-color: #7859b7;
  border: none;
  border-radius: 50px;
  box-shadow: none;
  appearance: none;
}

.buttonCursorGood {
  @include buttonStyle;
}

.hoverLinkNg {
  transition: color 0.2s;

  &:hover {
    color: orangered;
  }
}

.hoverLinkGood {
  transition: color 0.2s;
  @media (any-hover: hover) {
    &:hover {
      color: orangered;
    }
  }
}

.buttonFocusNg {
  display: block;
  padding: 8px 48px;
  font-size: 16px;
  font-weight: bold;
  color: #fff;
  cursor: pointer;
  background-color: #7859b7;
  border: none;
  border-radius: 50px;
  box-shadow: none;
  appearance: none;

  &:focus,
  &:focus-visible {
    outline: none;
  }
}

.buttonFocusGood {
  @include buttonStyle;
}

.accordionWrapper {
  width: 240px;
  height: 60px;

  .outline {
    position: relative;
    padding: 8px;
    border-bottom: 1px solid gray;

    &::after {
      position: absolute;
      top: 8px;
      right: 8px;
      display: block;
      content: "â–¼";
      transition: transform 0.3s;
    }
  }

  .content {
    padding: 8px;
  }
}

.divAccordion {
  .content {
    display: none;
  }

  &.isActive {
    .outline {
      &::after {
        transform: rotate(180deg);
      }
    }

    .content {
      display: block;
    }
  }
}

.usefulAccordion {
  .outline {
    display: block;
  }

  &[open] {
    .outline {
      &::after {
        transform: rotate(180deg);
      }
    }
  }
}

.buttonHoverNg {
  @include buttonStyle;

  transition: width 0.4s, height 0.4s, font-size 0.4s;

  &:hover {
    width: 178px;
    height: 50px;
    font-size: 19.2px;
  }
}

.buttonHoverGood {
  @include buttonStyle;

  transition: transform 0.4s;
  will-change: transform;
  &:hover {
    transform: scale(1.2);
  }
}

@mixin arrowHoverStyle {
  position: relative;
  display: block;
  width: 148px;
  height: 40px;
  padding: 8px 16px 8px 24px;
  margin-top: 24px;
  color: #333;
  text-decoration: none;
  background-color: #e9e9e9;
  border-radius: 24px;

  &::after {
    position: absolute;
    top: 12px;
    right: 18px;
    display: block;
    width: 16px;
    height: 16px;
    content: "";
    background-image: url("/assets/images/icon_arrow.svg");
    background-size: 16px;
  }
}

.arrowHoverNg {
  @include arrowHoverStyle;

  &::after {
    transition: right 0.7s;
  }

  &:hover {
    &::after {
      right: 8px;
    }
  }
}

.arrowHoverGood {
  @include arrowHoverStyle;

  &::after {
    transition: transform 0.7s;
  }

  &:hover {
    &::after {
      transform: translateX(8px);
    }
  }
}

.buttonHoverBorderNg {
  @include buttonStyle;

  transition: transform 0.2s;

  &:hover {
    transform: scale(0.5);
  }
}

.buttonHoverBorderGood {
  cursor: pointer;
  background: none;
  border: none;
  appearance: none;

  .buttonHoverBorderGood_inner {
    @include buttonStyle;

    position: relative;
    transition: transform 0.2s;
  }

  &:hover {
    .buttonHoverBorderGood_inner {
      transform: scale(0.5);
    }
  }
}

@mixin customCheckboxStyle {
  position: relative;
  display: block;
  height: 24px;
  padding-left: 24px;

  &:focus-within {
    outline: 2px solid #5779ff;
    outline-offset: 4px;
  }

  .checkIcon {
    position: absolute;
    top: 4px;
    left: 0;
    display: block;
    width: 16px;
    height: 16px;
    content: "";
    background-color: #e9e9e9;
    border-radius: 4px;
    transition: background-color 0.1s;

    &::before {
      position: absolute;
      top: 2px;
      left: 2px;
      width: 12px;
      height: 12px;
      content: "";
      background-image: url("/assets/images/icon_check.svg");
      background-size: 12px;
      transition: transform 0.4s cubic-bezier(0.34, 3.5, 0.64, 1);
      transform: scale(0);
    }
  }

  input:checked ~ .checkIcon {
    background-color: #5779ff;

    &::before {
      transform: scale(1);
    }
  }
}

.customCheckboxNg {
  @include customCheckboxStyle;

  input {
    display: none;
  }
}

.customCheckboxGood {
  @include customCheckboxStyle;
}

.autoCompleteForm {
  display: flex;
  flex-direction: column;
  row-gap: 12px;
  width: 280px;

  label {
    display: block;
    display: flex;
    justify-content: space-between;
  }

  input {
    width: 120px;
    margin-left: auto;
  }
}

.switchButton {
  display: block;
  padding: 8px 16px;
  margin-top: 12px;
  cursor: pointer;
  border-radius: 8px;
  appearance: none;
  border: 1px solid #333;
  background-color: #e9e9e9;
  transition: background-color 0.2s;
  &:hover{
    background-color:darken(#e9e9e9,10%);
  }
}

.inputZoomNg {
  input {
    font-size: 14px;
  }
}

.inputZoomGood {
  input {
    font-size: 16px;
  }
}
